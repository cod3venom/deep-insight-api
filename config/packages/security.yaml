security:
    encoders:
        App\Entity\User\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern: ^/api/login
            stateless: true
            anonymous: true
            json_login:
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
                username_path: email


        api:
            pattern: ^/api/
            stateless: true
            anonymous: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        main:
            anonymous: true
            lazy: true
            pattern: ^/
            form_login:
                login_path: login
                check_path: login
                remember_me: true
            logout:
                path: logout
                # where to redirect after logout
                target: login

        refresh:
            pattern: ^/token/refresh
            stateless: true
            anonymous: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # change '/admin' by the URL used by your Dashboard
        - { path: ^/login,                  roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin,                  roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/login_check,        roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/is-logged,          roles: IS_AUTHENTICATED_ANONYMOUSLY }

        - { path: ^/api/sign-in,            roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/is-logged,          roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/forgot-password,    roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/reset-password,     roles: IS_AUTHENTICATED_ANONYMOUSLY }

        - { path: ^/api,                    roles: IS_AUTHENTICATED_FULLY }